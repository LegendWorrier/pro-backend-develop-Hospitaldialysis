<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminPrefix" xml:space="preserve">
    <value>Admin </value>
  </data>
  <data name="Approved_detail" xml:space="preserve">
    <value>The {0} request has been granted.</value>
  </data>
  <data name="Approved_title" xml:space="preserve">
    <value>{0} Request Approved</value>
  </data>
  <data name="box_discon_detail" xml:space="preserve">
    <value>A hemobox for patient &lt;b&gt;{0}&lt;/b&gt; has disconnected while sending. [bed: {1}]</value>
  </data>
  <data name="box_discon_title" xml:space="preserve">
    <value>A Hemobox has disconnected</value>
  </data>
  <data name="CheckIn_detail" xml:space="preserve">
    <value>A patient has checked in : {0}</value>
  </data>
  <data name="CheckIn_title" xml:space="preserve">
    <value>Patient Check In</value>
  </data>
  <data name="CosignExe" xml:space="preserve">
    <value>co-sign</value>
  </data>
  <data name="CosignExe_detail" xml:space="preserve">
    <value>There is a co-sign request for you on execution record of &lt;b&gt;{1}&lt;/b&gt;</value>
  </data>
  <data name="CosignExe_title" xml:space="preserve">
    <value>Co-sign Request : Execution Record</value>
  </data>
  <data name="CosignHemo" xml:space="preserve">
    <value>co-sign</value>
  </data>
  <data name="CosignHemo_detail" xml:space="preserve">
    <value>There is a co-sign request for you on hemosheet of &lt;b&gt;{1}&lt;/b&gt;</value>
  </data>
  <data name="CosignHemo_title" xml:space="preserve">
    <value>Co-sign Request : Hemosheet</value>
  </data>
  <data name="Denied_detail" xml:space="preserve">
    <value>The {0} request has been rejected.</value>
  </data>
  <data name="Denied_title" xml:space="preserve">
    <value>{0} Request Rejected</value>
  </data>
  <data name="DoctorNote_detail" xml:space="preserve">
    <value>{2}&lt;b&gt;{0}&lt;/b&gt; has new comment about patient &lt;b&gt;{1}&lt;/b&gt;'s dialysis. Please check it out.</value>
  </data>
  <data name="DoctorNote_title" xml:space="preserve">
    <value>New Doctor Note</value>
  </data>
  <data name="DoctorPrefix" xml:space="preserve">
    <value>Doctor </value>
  </data>
  <data name="emptyString" xml:space="preserve">
    <value />
  </data>
  <data name="MedDel_detail" xml:space="preserve">
    <value>A medicine prescription has been deleted for &lt;b&gt;{0}&lt;/b&gt;. [{1}]</value>
  </data>
  <data name="MedDel_title" xml:space="preserve">
    <value>Med Prescription Deleted</value>
  </data>
  <data name="MedEdit_detail" xml:space="preserve">
    <value>A medicine prescription has been updated for &lt;b&gt;{0}&lt;/b&gt;. [{1}]</value>
  </data>
  <data name="MedEdit_title" xml:space="preserve">
    <value>Med Prescription Changed</value>
  </data>
  <data name="MedNew_detail" xml:space="preserve">
    <value>New medicine prescription has been created for &lt;b&gt;{0}&lt;/b&gt;. [{1}]</value>
  </data>
  <data name="MedNew_title" xml:space="preserve">
    <value>New Med Prescription</value>
  </data>
  <data name="noname" xml:space="preserve">
    <value>no name</value>
  </data>
  <data name="PrescNurse" xml:space="preserve">
    <value>Prescription Execute</value>
  </data>
  <data name="PrescNurse_detail" xml:space="preserve">
    <value>There is a prescription execute request for you on patient &lt;b&gt;{0}&lt;/b&gt;</value>
  </data>
  <data name="PrescNurse_title" xml:space="preserve">
    <value>Prescription Execute Request</value>
  </data>
  <data name="PresDel_detail" xml:space="preserve">
    <value>A dialysis prescription has been deleted for &lt;b&gt;{0}&lt;/b&gt;.</value>
  </data>
  <data name="PresDel_title" xml:space="preserve">
    <value>Dialysis Prescription Deleted</value>
  </data>
  <data name="PresEdit_detail" xml:space="preserve">
    <value>The dialysis prescription for &lt;b&gt;{0}&lt;/b&gt; has been updated.</value>
  </data>
  <data name="PresEdit_title" xml:space="preserve">
    <value>Dialysis Prescription Updated</value>
  </data>
  <data name="PresNew_detail" xml:space="preserve">
    <value>There is new dialysis prescription for &lt;b&gt;{0}&lt;/b&gt;.</value>
  </data>
  <data name="PresNew_title" xml:space="preserve">
    <value>New Dialysis Prescription</value>
  </data>
  <data name="Transfer" xml:space="preserve">
    <value>transfer</value>
  </data>
  <data name="TransferInfo_detail" xml:space="preserve">
    <value>Request to transfer patient &lt;b&gt;{1}&lt;/b&gt; to unit ('{2}') on slot: $d[{3}]:[EEEE, hh:mm a]</value>
  </data>
  <data name="TransferInfo_title" xml:space="preserve">
    <value>Patient Transfer Requested</value>
  </data>
  <data name="TransferTemp" xml:space="preserve">
    <value>transfer</value>
  </data>
  <data name="TransferTempInfo_detail" xml:space="preserve">
    <value>Request to temporarily transfer patient &lt;b&gt;{0}&lt;/b&gt; to '{1}' on $d[{2}]</value>
  </data>
  <data name="TransferTempInfo_title" xml:space="preserve">
    <value>Temporary Patient Transfer Requested</value>
  </data>
  <data name="TransferTemp_detail" xml:space="preserve">
    <value>There is a request to temporarily transfer patient &lt;b&gt;{0}&lt;/b&gt; from '{1}' to this unit ('{2}') on $d[{3}]</value>
  </data>
  <data name="TransferTemp_title" xml:space="preserve">
    <value>Temporary Patient Transfer Request</value>
  </data>
  <data name="Transfer_detail" xml:space="preserve">
    <value>There is a request to transfer patient &lt;b&gt;{1}&lt;/b&gt; from '{2}' to this unit ('{3}') on slot: $d[{4}]:[EEEE, hh:mm a]</value>
  </data>
  <data name="Transfer_title" xml:space="preserve">
    <value>Patient Transfer Request</value>
  </data>
</root>